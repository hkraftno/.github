name: Create PR - Golang

on:
  workflow_call:
    inputs:
      go_module_path:
        description: "Go module path, where the go.mod and go.sum are stored. If it is a service repo, it should probably be './service/.', if the module is in the root of the repo, it should be '.'"
        required: true
        type: string
        default: "./service/."
      docker_path:
        description: "Dockerfile path, where the docker-compose and dockerfiles are stored. If it is a service repo, it should probably be './service/.docker"
        required: true
        type: string
        default: "./service/.docker"


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set SSH-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.GO_MODULE_PRIVATE_KEY_BYGE_COMMON }}

      - name: Build Docker image with docker-compose
        run: |
          cd ${{ inputs.docker_path }}
          docker compose -f docker-compose.production.yml build

  lint-go:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go environment
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set SSH-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.GO_MODULE_PRIVATE_KEY_BYGE_COMMON }}

      - name: Linting using golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v1.54

          # Optional: working directory, useful for monorepos
          working-directory: ${{ inputs.go_module_path }}


  run-tests-go:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go environment
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set SSH-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.GO_MODULE_PRIVATE_KEY_BYGE_COMMON }}

      - name: Install dependencies
        run: |
          cd ${{ inputs.go_module_path }}
          go mod download

      - name: Run tests
        run: |
          cd ${{ inputs.go_module_path }}
          go test ./...
